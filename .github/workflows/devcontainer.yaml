name: Build and Push Docker DevContainer Image to GitHub Container Registry

on:
  workflow_run:
    workflows: ["Run Build Check"]  # Wait for the "Run Build Check" workflow to pass
    types:
      - completed

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}  # Only run if Node.js test workflow passed

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Check if there are changes in .devcontainer directory
      - name: Check for changes in .devcontainer
        id: check_changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q "^.devcontainer/"; then
            echo "Changes detected in .devcontainer"
            echo "changes_detected=true" >> $GITHUB_ENV
          else
            echo "No changes detected in .devcontainer"
            echo "changes_detected=false" >> $GITHUB_ENV
          fi

      # Step 3: Build and push Docker image only if changes were detected
      - name: Build Docker image
        if: env.changes_detected == 'true'
        run: |
          docker build -t ghcr.io/umlcloudcomputing/photosky-devcontainer:latest -f .devcontainer/Dockerfile .

      # Step 4: Log in to GitHub Container Registry (only for pushes)
      - name: Log in to GitHub Container Registry
        if: github.event_name == 'push' && env.changes_detected == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_PAT }}

      # Step 5: Push the Docker image to GitHub Container Registry (only for pushes)
      - name: Push Docker image
        if: github.event_name == 'push' && env.changes_detected == 'true'
        run: |
          docker push ghcr.io/umlcloudcomputing/photosky-devcontainer:latest
